# The FW_PACKAGE_MAINTAINER field is populated with the environment
# variable FW_PACKAGE_DEFAULT_MAINTAINER if non-empty at init time

FW_PACKAGE_NAME="erlnode"
FW_PACKAGE_VERSION="0.6.0"
FW_PACKAGE_MAINTAINER="Anthony Molinaro <anthonym@alumni.caltech.edu>"
FW_PACKAGE_SHORT_DESCRIPTION="An Erlang Node with ErlRc Integration."
FW_PACKAGE_DESCRIPTION=`cat README`
FW_PACKAGE_ARCHITECTURE_DEPENDENT="1"

# Dependency information.  The native syntax corresponds to Debian,
# http://www.debian.org/doc/debian-policy/ch-relationships.html
# Section 7.1 "Syntax of Relationship Fields"
# 
# For other packaging systems, the syntax is translated for you.

FW_PACKAGE_DEPENDS="
  erlstart,
  erlrc,
  goldrush | erlang-r15b-goldrush (>= 0.1.5.0),
  lager | erlang-r15b-lager (>= 2.0.1.0),
  erlang-r15b-syslog (>= 1.0.2.0),
  erlang-r15b-lager-syslog (>= 2.0.1.0),
  crypto_starter | erlang-15b-crypto-starter,
  sasl_starter | erlang-15b-sasl-starter,
  erlang-r15b-compiler-starter,
  erlang-r15b-syntax-tools-starter
"
FW_PACKAGE_CONFLICTS=""
FW_PACKAGE_PROVIDES=""
FW_PACKAGE_REPLACES=""
FW_PACKAGE_SUGGESTS=""

FW_PACKAGE_BUILD_DEPENDS="
  erlstart,
  erlrc,
  goldrush | erlang-r15b-goldrush (>= 0.1.5.0),
  lager | erlang-r15b-lager (>= 2.0.1.0),
  erlang-r15b-syslog (>= 1.0.2.0),
  erlang-r15b-lager-syslog (>= 2.0.1.0),
  crypto_starter | erlang-15b-crypto-starter,
  sasl_starter | erlang-15b-sasl-starter,
  erlang-r15b-compiler-starter,
  erlang-r15b-syntax-tools-starter
"
FW_PACKAGE_BUILD_CONFLICTS=""

# dupload is used for submitting debian packages to a package archive
# The FW_DUPLOAD_ARGS field is populated with the environment variable
# FW_DEFAULT_DUPLOAD_ARGS if non-empty at init time

FW_DUPLOAD_ARGS=${FW_DUPLOAD_ARGS-"-q"}

# scp+createrepo is used for submitting rpm packages to a package archive
# The FW_RPM_REPO_USER, FW_RPM_REPO_HOST, FW_RPM_REPO_BASEDIR,
# and FW_RPM_POSTCREATEREPO_COMMANDS variables are populated with 
# FW_RPM_REPO_USER_DEFAULT, FW_RPM_REPO_HOST_DEFAULT, 
# FW_RPM_REPO_BASEDIR_DEFAULT, and FW_RPM_POSTCREATEREPO_COMMANDS_DEFAULT
# respectively if non-empty at init time

FW_RPM_REPO_USER=${FW_RPM_REPO_USER-"`whoami`"}
FW_RPM_REPO_HOST=${FW_RPM_REPO_HOST-"localhost"}
FW_RPM_REPO_BASEDIR=${FW_RPM_REPO_BASEDIR-""}
FW_RPM_CREATEREPO_ARGS=${FW_RPM_CREATEREPO_ARGS-"-q --database"}

# this variable controls whether createrepo is run incrementally (--update).
# possible settings are yes (always do it), no (never do it), and 
# auto (do it if the repository has been previously initialized)
FW_RPM_CREATEREPO_INCREMENTAL=${FW_RPM_CREATEREPO_INCREMENTAL-"auto"}

# these commands will be run after a successful createrepo run
FW_RPM_POSTCREATEREPO_COMMANDS=${FW_RPM_POSTCREATEREPO_COMMANDS-"true"}
# here's a suggestion:
# FW_RPM_POSTCREATEREPO_COMMANDS="gpg --detach-sign --armor repodata/repomd.xml" 
